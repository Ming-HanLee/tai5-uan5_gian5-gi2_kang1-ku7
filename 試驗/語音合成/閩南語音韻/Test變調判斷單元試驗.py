# -*- coding: utf-8 -*-
from unittest.case import TestCase
from 臺灣言語工具.解析整理.拆文分析器 import 拆文分析器
from 臺灣言語工具.語音合成.閩南語變調 import 閩南語變調
from 臺灣言語工具.基本物件.句 import 句
from 臺灣言語工具.基本物件.章 import 章
from 臺灣言語工具.解析整理.字物件篩仔 import 字物件篩仔


class 變調判斷單元試驗(TestCase):
    愛檢查的 = [
        ('句尾變調', '我愛媠媠 #', 'gua2 ai3 sui2-sui2 #'),
    ]

    def test_檢查本調(self):
        for 名, 漢字, 臺羅 in self.愛檢查的:
            輸入物件 = self.產生套用前物件(漢字.replace('#', ''), 臺羅.replace('#', ''))
            結果 = 變調判斷.判斷(輸入物件)
            答案字陣列 = self.產生套用前物件(漢字, 臺羅).篩出字陣列()

            這馬答案 = len(答案字陣列) - 1
            這馬結果 = len(結果) - 1
            while 這馬答案 >= 0:
                if 變調判斷.是井號(答案字陣列[這馬答案]):
                    self.assertEqual(結果[這馬結果], 維持本調)
                    這馬答案 -= 2
                else:
                    self.assertNotEqual(結果[這馬結果], 維持本調)
                    這馬答案 -= 1
                這馬結果 -= 1
            self.assertLess(這馬結果, 0)

    def test_句尾變調(self):
        原本 = 拆文分析器.建立句物件('我愛媠媠')
        self._設定音值(原本,
                   [('g', 'ua', '2'), ('ʔ', 'ai', '3'), ('s', 'ui', '2'), ('s', 'ui', '2')])
        變調了 = 拆文分析器.建立句物件('我愛媠媠')
        self._設定音值(變調了,
                   [('g', 'ua', '1'), ('ʔ', 'ai', '2'), ('s', 'ui', '1'), ('s', 'ui', '2')])
        self.assertEqual(閩南語變調.變調(原本), 變調了)

    def test_仝詞攏輕聲(self):
        原本 = 拆文分析器.建立句物件('gua2 ai3 0sui2-sui2')
        self._設定音值(原本,
                   [('g', 'ua', '2'), ('ʔ', 'ai', '3'), ('s', 'ui', '0'), ('s', 'ui', '2')])
        變調了 = 拆文分析器.建立句物件('gua2 ai3 0sui2-sui2')
        self._設定音值(變調了,
                   [('g', 'ua', '1'), ('ʔ', 'ai', '2'), ('s', 'ui', '0'), ('s', 'ui', '0')])
        self.assertEqual(閩南語變調.變調(原本), 變調了)

    def test_的前無變調(self):
        原本 = 拆文分析器.建立句物件('我上愛媠媠的姑娘')
        self._設定音值(原本,
                   [('g', 'ua', '2'), ('s', 'ioŋ', '7'), ('ʔ', 'ai', '3'),
                    ('s', 'ui', '2'), ('s', 'ui', '2'), ('ʔ', 'e', '5'), ('k', 'o', '1'), ('n', 'iu', '5')])
        變調了 = 拆文分析器.建立句物件('我上愛媠媠的姑娘')
        self._設定音值(變調了,
                   [('g', 'ua', '1'), ('s', 'ioŋ', '3'), ('ʔ', 'ai', '2'),
                    ('s', 'ui', '1'), ('s', 'ui', '2'), ('ʔ', 'e', '7'), ('k', 'o', '7'), ('n', 'iu', '5')])
        self.assertEqual(閩南語變調.變調(原本), 變調了)

    def test_的前無變調原本物件無變(self):
        原本 = 拆文分析器.建立句物件('我上愛媠媠的姑娘')
        self._設定音值(原本,
                   [('g', 'ua', '2'), ('s', 'ioŋ', '7'), ('ʔ', 'ai', '3'),
                    ('s', 'ui', '2'), ('s', 'ui', '2'), ('ʔ', 'e', '5'), ('k', 'o', '1'), ('n', 'iu', '5')])
        原本物件 = 句(原本.內底集)
        閩南語變調.變調(原本)
        self.assertEqual(原本, 原本物件)

    def test_的前代名詞變調(self):
        原本 = 拆文分析器.建立句物件('我的媠媠')
        self._設定音值(原本,
                   [('g', 'ua', '2'), ('ʔ', 'e', '5'),
                    ('s', 'ui', '2'), ('s', 'ui', '2'), ])
        變調了 = 拆文分析器.建立句物件('我的媠媠')
        self._設定音值(變調了,
                   [('g', 'ua', '1'), ('ʔ', 'e', '7'),
                    ('s', 'ui', '1'), ('s', 'ui', '2'), ])
        self.assertEqual(閩南語變調.變調(原本), 變調了)

    def test_的前代名詞變調原本物件無變(self):
        原本 = 拆文分析器.建立句物件('我的媠媠')
        self._設定音值(原本,
                   [('g', 'ua', '2'), ('ʔ', 'e', '5'),
                    ('s', 'ui', '2'), ('s', 'ui', '2'), ])
        原本物件 = 句(原本.內底集)
        閩南語變調.變調(原本)
        self.assertEqual(原本, 原本物件)

    def test_井前無變調(self):
        原本 = 拆文分析器.建立句物件('我#愛媠媠')
        self._設定音值(原本,
                   [('g', 'ua', '2'), (None,), ('ʔ', 'ai', '3'), ('s', 'ui', '2'), ('s', 'ui', '2')])
        變調了 = 拆文分析器.建立句物件('我#愛媠媠')
        self._設定音值(變調了,
                   [('g', 'ua', '2'), (None,), ('ʔ', 'ai', '2'), ('s', 'ui', '1'), ('s', 'ui', '2')])
        self.assertEqual(閩南語變調.變調(原本), 變調了)

    def test_井前無變調原本物件無變(self):
        原本 = 拆文分析器.建立句物件('我#愛媠媠')
        self._設定音值(原本,
                   [('g', 'ua', '2'), (None,), ('ʔ', 'ai', '3'), ('s', 'ui', '2'), ('s', 'ui', '2')])
        原本物件 = 句(原本.內底集)
        閩南語變調.變調(原本)
        self.assertEqual(原本, 原本物件)

    def test_章物件句尾變調(self):
        原本 = 拆文分析器.建立章物件('我愛媠媠。我愛媠媠。')
        self._設定音值(原本,
                   [('g', 'ua', '2'), ('ʔ', 'ai', '3'), ('s', 'ui', '2'), ('s', 'ui', '2'), (None,),
                    ('g', 'ua', '2'), ('ʔ', 'ai', '3'), ('s', 'ui', '2'), ('s', 'ui', '2'), (None,), ])
        變調了 = 拆文分析器.建立章物件('我愛媠媠。我愛媠媠。')
        self._設定音值(變調了,
                   [('g', 'ua', '1'), ('ʔ', 'ai', '2'), ('s', 'ui', '1'), ('s', 'ui', '2'), (None,),
                    ('g', 'ua', '1'), ('ʔ', 'ai', '2'), ('s', 'ui', '1'), ('s', 'ui', '2'), (None,), ])
        self.assertEqual(閩南語變調.變調(原本), 變調了)

    def test_章物件句尾變調原本物件無變(self):
        原本 = 拆文分析器.建立章物件('我愛媠媠。我愛媠媠。')
        self._設定音值(原本,
                   [('g', 'ua', '2'), ('ʔ', 'ai', '3'), ('s', 'ui', '2'), ('s', 'ui', '2'), (None,),
                    ('g', 'ua', '2'), ('ʔ', 'ai', '3'), ('s', 'ui', '2'), ('s', 'ui', '2'), (None,), ])
        原本物件 = 章(原本.內底句)
        閩南語變調.變調(原本)
        self.assertEqual(原本, 原本物件)

    def _設定音值(self, 物件, 音值陣列):
        字陣列 = 字物件篩仔.篩出字物件(物件)
        self.assertEqual(len(字陣列), len(音值陣列))
        for 字物件, 音值 in zip(字陣列, 音值陣列):
            字物件.音 = 音值
